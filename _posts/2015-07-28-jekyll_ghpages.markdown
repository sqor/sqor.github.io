---
title: Building a blog with Jekyll and Github Pages
author: Andy Pohl
layout: post
tags: [blog, jekyll, github-pages, material-design, open-source]
gravatar:  08a53b978e2745e9555f608e97c89df8
---

In a world where there are more options for building a personal or technical blog than ever before, what does one do to stay away from generic layouts that have been seen a million times before?  There are several brilliant open source technologies out there that make it pretty easy and fun to build a highly functional blog without having to sacrifice customization.  I was asked by my lead front-end developer and CTO to build a tech blog for [Sqor Sports](http://sqor.com), and it was suggested that I check out [Jekyll](http://jekyllrb.com/docs/home/)  and [GitHub Pages](https://pages.github.com/) as a way to host.  I had used GH-Pages before on project while attending General Assembly, but had never heard of Jekyll, which for me was great since I am always up for learning new technologies.

After checking out the documentation on Jekyll, which is very thorough and easy to navigate, I was able to get my initial framework up and running within an hour.  Jekyll was built with blogging in mind, but it was also built with developers in mind.  By keeping everything associated with a github repository, it keeps you from having to navigate what are sometimes poorly maintained blogging engines and overly complex frameworks.  Jekyll essentially takes pre-formatted layouts that the user creates, and then uses whichever format is specified for any particular post.  Posts are created using markdown files, all of which use [Front Matter](http://jekyllrb.com/docs/frontmatter/) as a means of setting the specifics for the post (title, author, layout, tags, etc).  Adding social plugins was easy enough.  Including [Gravatar](https://en.gravatar.com/) and [Disqus](https://disqus.com/) helped to add a more personal and communicative component to the blog. Isn't technology wonderful!?!?!

Adding custom style was the biggest challenge, as finding the best solution and theme can make a huge difference in the way that visitors view and interact with your blog.  At Sqor Sports, we had recently made a shift to implementing Google's [Material Design](https://www.google.com/design/spec/material-design/introduction.html) into our mobile and web apps, so it made sense to go in that direction for the blog as well.  I came across a very user-friendly product called [Materialize](http://materializecss.com/), which takes all of the best parts of Material Design and provides an easy to use front-end framework.  The documentation was excellent, and after playing around with various set ups, was able to produce a layout that I was very happy with.

Once a post has been written, it's as simple as pushing your files to the repo and merging.  The only limitation that I find with the way that this Jekyll and GH-Pages combo works, particularly for Sqor Sports, is that anyone that does not have a background in programming may feel uneasy using git to produce posts on their own without bringing a developer in.  However, this is easily fixed by having a programmer add the posts once they have been written on behalf of any given poster if need be.  Overall, I learned quite a bit during this process, and as a junior-developer it was a fantastic opportunity to use new technoliges that I had yet to be exposed to, contribute to my new company, and add some personalized touches to a product that would be used by many people.      

